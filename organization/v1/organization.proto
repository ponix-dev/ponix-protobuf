syntax = "proto3";

package organization.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

enum OrganizationStatus {
  ORGANIZATION_STATUS_UNSPECIFIED = 0;
  ORGANIZATION_STATUS_PENDING = 1;
  ORGANIZATION_STATUS_ACTIVE = 2;
  ORGANIZATION_STATUS_INACTIVE = 3;
}

message Organization {
  string id = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).required = true];
  OrganizationStatus status = 3 [(buf.validate.field).required = true];
  google.protobuf.Timestamp created_at = 4 [(buf.validate.field).required = true];
  google.protobuf.Timestamp updated_at = 5 [(buf.validate.field).required = true];
}

message CreateOrganizationRequest {
  string name = 1 [(buf.validate.field).required = true];
}

message CreateOrganizationResponse {
  string organization_id = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).required = true];
  OrganizationStatus status = 3 [(buf.validate.field).required = true];
  google.protobuf.Timestamp created_at = 4 [(buf.validate.field).required = true];
}

message GetOrganizationRequest {
  string organization_id = 1 [(buf.validate.field).required = true];
}

message GetOrganizationResponse {
  Organization organization = 1 [(buf.validate.field).required = true];
}

message GetUserOrganizationsRequest {
  string user_id = 1 [(buf.validate.field).required = true];
}

message GetUserOrganizationsResponse {
  repeated Organization organizations = 1 [(buf.validate.field).required = true];
}

service OrganizationService {
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse);
  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse);
  rpc GetUserOrganizations(GetUserOrganizationsRequest) returns (GetUserOrganizationsResponse);
}
