syntax = "proto3";

package iot.v1;

import "buf/validate/validate.proto";
import "iot/v1/end_device.proto";
import "iot/v1/gateway.proto";

enum IOTPlatform {
  IOT_PLATFORM_UNSPECIFIED = 0;
  IOT_PLATFORM_TTN = 1;
}

enum NetworkServerStatus {
  NETWORK_SERVER_STATUS_UNSPECIFIED = 0;
  NETWORK_SERVER_STATUS_PENDING = 1;
  NETWORK_SERVER_STATUS_ACTIVE = 2;
  NETWORK_SERVER_STATUS_INACTIVE = 3;
  NETWORK_SERVER_STATUS_ERROR = 4;
}

message NetworkServer {
  string id = 1 [(buf.validate.field).required = true];
  string system_id = 2 [(buf.validate.field).required = true];
  string name = 3 [(buf.validate.field).required = true];
  IOTPlatform iot_platform = 4 [(buf.validate.field).required = true];
  NetworkServerStatus status = 5 [(buf.validate.field).required = true];
}

message CreateNetworkServerRequest {
  string system_id = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).required = true];
  IOTPlatform iot_platform = 3 [(buf.validate.field).required = true];
}

message CreateNetworkServerResponse {
  string network_server_id = 1 [(buf.validate.field).required = true];
}

message NetworkServerRequest {
  string network_server_id = 1 [(buf.validate.field).required = true];
}

message NetworkServerResponse {
  NetworkServer network_server = 1 [(buf.validate.field).required = true];
}

message NetworkServerGatewaysRequest {
  string network_server_id = 1 [(buf.validate.field).required = true];
}

message NetworkServerGatewaysResponse {
  repeated iot.v1.Gateway gateways = 1 [(buf.validate.field).required = true];
}

message NetworkServerEndDevicesRequest {
  string network_server_id = 1 [(buf.validate.field).required = true];
}

message NetworkServerEndDevicesResponse {
  repeated iot.v1.EndDevice end_devices = 1 [(buf.validate.field).required = true];
}

service NetworkServerService {
  rpc CreateNetworkServer(CreateNetworkServerRequest) returns (CreateNetworkServerResponse);
  rpc NetworkServer(NetworkServerRequest) returns (NetworkServerResponse);
  rpc NetworkServerGateways(NetworkServerGatewaysRequest) returns (NetworkServerGatewaysResponse);
  rpc NetworkServerEndDevices(NetworkServerEndDevicesRequest) returns (NetworkServerEndDevicesResponse);
}
