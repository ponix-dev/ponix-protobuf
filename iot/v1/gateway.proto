syntax = "proto3";

package iot.v1;

import "buf/validate/validate.proto";
import "iot/v1/end_device.proto";

enum GatewayStatus {
  GATEWAY_STATUS_UNSPECIFIED = 0;
  GATEWAY_STATUS_PENDING = 1;
  GATEWAY_STATUS_ACTIVE = 2;
  GATEWAY_STATUS_INACTIVE = 3;
  GATEWAY_STATUS_ERROR = 4;
}

enum GatewayFrequency {
  GATEWAY_FREQUENCY_UNSPECIFIED = 0;
  GATEWAY_FREQUENCY_915 = 1;
}

message Gateway {
  string id = 1 [(buf.validate.field).required = true];
  string system_id = 2 [(buf.validate.field).required = true];
  string network_server_id = 3 [(buf.validate.field).required = true];
  string name = 4 [(buf.validate.field).required = true];
  GatewayStatus status = 5 [(buf.validate.field).required = true];
  string eui = 6;
  string gateway_server_address = 7 [(buf.validate.field).required = true];
  GatewayFrequency frequency = 8 [(buf.validate.field).required = true];
  string lns_authentication_key = 9 [(buf.validate.field).required = true];
}

message CreateGatewayRequest {
  string system_id = 1 [(buf.validate.field).required = true];
  string network_server_id = 2 [(buf.validate.field).required = true];
  string name = 3 [(buf.validate.field).required = true];
}

message CreateGatewayResponse {
  string gateway_id = 1 [(buf.validate.field).required = true];
}

message GatewayRequest {
  string gateway_id = 1 [(buf.validate.field).required = true];
}

message GatewayResponse {
  Gateway gateway = 1 [(buf.validate.field).required = true];
}

message GatewayEndDevicesRequest {
  string gateway_id = 1 [(buf.validate.field).required = true];
}

message GatewayEndDevicesResponse {
  repeated iot.v1.EndDevice end_devices = 1 [(buf.validate.field).required = true];
}

service GatewayService {
  rpc CreateGateway(CreateGatewayRequest) returns (CreateGatewayResponse);
  rpc Gateway(GatewayRequest) returns (GatewayResponse);
  rpc GatewayEndDevices(GatewayEndDevicesRequest) returns (GatewayEndDevicesResponse);
}
