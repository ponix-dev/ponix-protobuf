syntax = "proto3";

package iot.v1;

import "buf/validate/validate.proto";

enum LORAWANVersion {
  LORAWAN_VERSION_UNSPECIFIED = 0;
  LORAWAN_VERSION_1_0_0 = 1;
  LORAWAN_VERSION_1_0_1 = 2;
  LORAWAN_VERSION_1_0_2 = 3;
  LORAWAN_VERSION_1_0_3 = 4;
  LORAWAN_VERSION_1_0_4 = 5;
  LORAWAN_VERSION_1_1_0 = 6;
}

enum ActivationMethod {
  ACTIVATION_METHOD_UNSPECIFIED = 0;
  ACTIVATION_METHOD_OTAA = 1; // Over The Air Activation
  ACTIVATION_METHOD_ABP = 2; // Activation By Personalization
}

message LoRaWANHardwareData {
  string hardware_type_id = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).required = true];
  string description = 3;
  string manufacturer = 4 [(buf.validate.field).required = true];
  string model = 5 [(buf.validate.field).required = true];
  string firmware_version = 6 [(buf.validate.field).required = true];
  string hardware_version = 7 [(buf.validate.field).required = true];
  string profile = 8 [(buf.validate.field).required = true];
  LORAWANVersion lorawan_version = 9 [(buf.validate.field).required = true];
}

message LoRaWANConfig {
  string device_eui = 1 [(buf.validate.field).string.len = 16]; // 64-bit device identifier (hex)
  string application_eui = 2 [(buf.validate.field).string.len = 16]; // 64-bit application identifier (hex)
  string application_key = 3 [(buf.validate.field).string.len = 32]; // 128-bit application key (hex)
  ActivationMethod activation_method = 4 [(buf.validate.field).required = true];
  string frequency_plan = 5 [(buf.validate.field).required = true]; // e.g., "US_902_928", "EU_863_870"
  string network_key = 6 [(buf.validate.field).string.len = 32]; // For LoRaWAN 1.1+ (hex)
  string application_id = 7 [(buf.validate.field).required = true]; // LoRaWAN application identifier
  LoRaWANHardwareData hardware_data = 8; // Inline hardware metadata
}

// Hardware metadata type management
message CreateLoRaWANHardwareTypeRequest {
  string name = 1 [(buf.validate.field).required = true];
  string description = 2;
  string manufacturer = 3 [(buf.validate.field).required = true];
  string model = 4 [(buf.validate.field).required = true];
  string firmware_version = 5 [(buf.validate.field).required = true];
  string hardware_version = 6 [(buf.validate.field).required = true];
  string profile = 7 [(buf.validate.field).required = true];
  LORAWANVersion lorawan_version = 8 [(buf.validate.field).required = true];
}

message CreateLoRaWANHardwareTypeResponse {
  LoRaWANHardwareData hardware_data = 1 [(buf.validate.field).required = true];
}

message GetLoRaWANHardwareTypeRequest {
  string hardware_type_id = 1 [(buf.validate.field).required = true];
}

message GetLoRaWANHardwareTypeResponse {
  LoRaWANHardwareData hardware_data = 1 [(buf.validate.field).required = true];
}

message ListLoRaWANHardwareTypesRequest {}

message ListLoRaWANHardwareTypesResponse {
  repeated LoRaWANHardwareData hardware_types = 1;
}

message UpdateLoRaWANHardwareTypeRequest {
  LoRaWANHardwareData hardware_data = 1 [(buf.validate.field).required = true];
}

message UpdateLoRaWANHardwareTypeResponse {}

message DeleteLoRaWANHardwareTypeRequest {
  string hardware_type_id = 1 [(buf.validate.field).required = true];
}

message DeleteLoRaWANHardwareTypeResponse {}

service LoRaWANService {
  // Hardware type management
  rpc CreateLoRaWANHardwareType(CreateLoRaWANHardwareTypeRequest) returns (CreateLoRaWANHardwareTypeResponse);
  rpc GetLoRaWANHardwareType(GetLoRaWANHardwareTypeRequest) returns (GetLoRaWANHardwareTypeResponse);
  rpc ListLoRaWANHardwareTypes(ListLoRaWANHardwareTypesRequest) returns (ListLoRaWANHardwareTypesResponse);
  rpc UpdateLoRaWANHardwareType(UpdateLoRaWANHardwareTypeRequest) returns (UpdateLoRaWANHardwareTypeResponse);
  rpc DeleteLoRaWANHardwareType(DeleteLoRaWANHardwareTypeRequest) returns (DeleteLoRaWANHardwareTypeResponse);
}
