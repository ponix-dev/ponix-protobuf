syntax = "proto3";

package ponix.v1;

import "iot/v1/end_device.proto";
import "iot/v1/gateway.proto";
import "iot/v1/network_server.proto";
import "ponix/v1/system_input.proto";

enum SystemStatus {
  SYSTEM_STATUS_UNSPECIFIED = 0;
  SYSTEM_STATUS_PENDING = 1;
  SYSTEM_STATUS_ACTIVE = 2;
  SYSTEM_STATUS_INACTIVE = 3;
  SYSTEM_STATUS_ERROR = 4;
}

message System {
  string id = 1;
  string organization_id = 2;
  string name = 3;
  SystemStatus status = 4;
}

message CreateSystemRequest {
  string organization_id = 1;
  string name = 2;
}

message CreateSystemResponse {
  string system_id = 1;
}

message SystemRequest {
  string system_id = 1;
}

message SystemResponse {
  System system = 1;
}

message SystemNetworkServersRequest {
  string system_id = 1;
}

message SystemNetworkServersResponse {
  repeated iot.v1.NetworkServer network_servers = 1;
}

message SystemGatewaysRequest {
  string system_id = 1;
}

message SystemGatewaysResponse {
  repeated iot.v1.Gateway gateways = 1;
}

message SystemEndDevicesRequest {
  string system_id = 1;
}

message SystemEndDevicesResponse {
  repeated iot.v1.EndDevice end_devices = 1;
}

message SystemInputsRequest {
  string system_id = 1;
}

message SystemInputsResponse {
  repeated ponix.v1.SystemInput inputs = 1;
}

service SystemService {
  rpc CreateSystem(CreateSystemRequest) returns (CreateSystemResponse);
  rpc System(SystemRequest) returns (SystemResponse);
  rpc SystemNetworkServers(SystemNetworkServersRequest) returns (SystemNetworkServersResponse);
  rpc SystemGateways(SystemGatewaysRequest) returns (SystemGatewaysResponse);
  rpc SystemEndDevices(SystemEndDevicesRequest) returns (SystemEndDevicesResponse);
  rpc SystemInputs(SystemInputsRequest) returns (SystemInputsResponse);
}
